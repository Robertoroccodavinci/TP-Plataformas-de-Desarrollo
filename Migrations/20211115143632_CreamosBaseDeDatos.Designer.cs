// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP_Plataformas_de_Desarrollo;

namespace TP_Plataformas_de_Desarrollo.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20211115143632_CreamosBaseDeDatos")]
    partial class CreamosBaseDeDatos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Carro", b =>
                {
                    b.Property<int>("idCarro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("idCarro");

                    b.HasIndex("idUsuario")
                        .IsUnique();

                    b.ToTable("Carro");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.CarroProducto", b =>
                {
                    b.Property<int>("idCarroProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("cantidad")
                        .HasColumnType("tinyint");

                    b.Property<int>("idCarro")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.HasKey("idCarroProducto");

                    b.HasIndex("idCarro");

                    b.HasIndex("idProducto");

                    b.ToTable("CarroProducto");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Categoria", b =>
                {
                    b.Property<int>("idCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("idCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Compra", b =>
                {
                    b.Property<short>("idCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("idCompra");

                    b.HasIndex("idUsuario");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.CompraProducto", b =>
                {
                    b.Property<int>("idCompraProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("cantidad")
                        .HasColumnType("tinyint");

                    b.Property<short>("idCompra")
                        .HasColumnType("smallint");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.HasKey("idCompraProducto");

                    b.HasIndex("idCompra");

                    b.HasIndex("idProducto");

                    b.ToTable("CompraProducto");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("idCategoria")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("idProducto");

                    b.HasIndex("idCategoria");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("cuit_cuil")
                        .HasColumnType("bigint");

                    b.Property<int>("dni")
                        .HasColumnType("int");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("rol")
                        .HasColumnType("int");

                    b.HasKey("idUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Carro", b =>
                {
                    b.HasOne("TP_Plataformas_de_Desarrollo.Usuario", "usuario")
                        .WithOne("miCarro")
                        .HasForeignKey("TP_Plataformas_de_Desarrollo.Carro", "idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.CarroProducto", b =>
                {
                    b.HasOne("TP_Plataformas_de_Desarrollo.Carro", "carro")
                        .WithMany("carroProducto")
                        .HasForeignKey("idCarro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP_Plataformas_de_Desarrollo.Producto", "producto")
                        .WithMany("carroProducto")
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("carro");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Compra", b =>
                {
                    b.HasOne("TP_Plataformas_de_Desarrollo.Usuario", "usuario")
                        .WithMany("compras")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.CompraProducto", b =>
                {
                    b.HasOne("TP_Plataformas_de_Desarrollo.Compra", "compra")
                        .WithMany("compraProducto")
                        .HasForeignKey("idCompra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP_Plataformas_de_Desarrollo.Producto", "producto")
                        .WithMany("compraProducto")
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compra");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Producto", b =>
                {
                    b.HasOne("TP_Plataformas_de_Desarrollo.Categoria", "cat")
                        .WithMany("productos")
                        .HasForeignKey("idCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cat");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Carro", b =>
                {
                    b.Navigation("carroProducto");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Categoria", b =>
                {
                    b.Navigation("productos");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Compra", b =>
                {
                    b.Navigation("compraProducto");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Producto", b =>
                {
                    b.Navigation("carroProducto");

                    b.Navigation("compraProducto");
                });

            modelBuilder.Entity("TP_Plataformas_de_Desarrollo.Usuario", b =>
                {
                    b.Navigation("compras");

                    b.Navigation("miCarro");
                });
#pragma warning restore 612, 618
        }
    }
}
